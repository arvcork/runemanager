generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Skill {
  overall
  attack
  strength
  defence
  range
  prayer
  magic
  runecrafting
  construction
  hitpoints
  agility
  herblore
  thieving
  crafting
  fletching
  slayer
  hunter
  mining
  smithing
  fishing
  cooking
  firemaking
  woodcutting
  farming

  @@map("skills")
}

model Player {
  id              Int    @id @default(autoincrement())
  username        String @unique @db.VarChar(12)
  displayName     String @unique @db.VarChar(12)
  skillSnapshotId Int?

  skillSnapshot  SkillSnapshot?  @relation("player_latest_skill_snapshot", fields: [skillSnapshotId], references: [id], onDelete: SetNull, onUpdate: NoAction)
  skillSnapshots SkillSnapshot[]

  @@index([skillSnapshotId], map: "player_latest_skill_snapshot_id")
  @@map("players")
}

model SkillSnapshot {
  id         Int       @id @default(autoincrement())
  playerId   Int
  skill      Skill     @default(overall)
  rank       Int       @default(-1)
  experience Int       @default(-1)
  syncedAt   DateTime? @db.Timestamptz(6)
  createdAt  DateTime  @default(now()) @db.Timestamptz(6)

  player Player   @relation(fields: [playerId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  Player Player[] @relation("player_latest_skill_snapshot")

  @@index([playerId, createdAt(sort: Desc)], map: "skill_snapshot_player_id_created_at")
  @@map("skill_snapshots")
}
